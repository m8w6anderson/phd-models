% ########## COUNTING CELLS (through ImageJ (Fiji) / Miji) ################

% Add java files to workspace

javaaddpath 'F:\mOki\08 Google Drive\Google Drive\UNI\02 BRISTOL\PhD\Modelling\MATLAB\Computer Vision\Counting\Cells (ImageJ)/ij.jar'
javaaddpath 'F:\mOki\08 Google Drive\Google Drive\UNI\02 BRISTOL\PhD\Modelling\MATLAB\Computer Vision\Counting\Cells (ImageJ)/mij.jar'

% Initial setup

MIJ.start;
MIJ.closeAllWindows
Num_fields = 6;
Num_treatments = 4;
Num_lines = 4;
results = zeros(4*Num_treatments,Num_fields,Num_lines);

% Iterate through each cell line

for k = 1:Num_lines
    
    % Iterate through each treatment
    
    for j = 1:Num_treatments
        
        % Iterate through DAPI images
        
        for i = 1:Num_fields
            DAPI = mijread();
            MIJ.createImage('DAPI', DAPI, true);
            MIJ.run('Bandpass Filter...', 'filter_large=68 filter_small=25 suppress=None tolerance=5');
            MIJ.run('Find Maxima...', 'noise=0 output=Count exclude');
            results((4*(j-1))+1,i,k) = MIJ.getResultsTable;
            display({'DAPI' i})
            MIJ.closeAllWindows
        end
        
%         for i = 1:Num_fields
%             DAPI = mijread();
%             MIJ.createImage('DAPI', DAPI, true);
%             MIJ.run('8-bit');
%             MIJ.run('Subtract Background...', 'rolling=100');
%             MIJ.run('Threshold...');
%             MIJ.setThreshold(20, 200);
%             MIJ.selectWindow('Threshold');
%             MIJ.run('Close');
%             MIJ.selectWindow('DAPI');
%             MIJ.run('Convert to Mask');
%             MIJ.run('Convert to Mask');
%             MIJ.run('Fill Holes');
%             MIJ.run('Watershed');
%             MIJ.run('Analyze Particles...', 'size=400-Infinity circularity=0.10-1.00 show=Outlines exclude clear summarize');
%             results((4*(j-1))+1,i,k) = length(MIJ.getResultsTable);
%             MIJ.closeAllWindows
%         end
        
        % Iterate through WIPI2 images
        
        for i = 1:Num_fields
            WIPI2 = mijread();
            MIJ.createImage('WIPI2', WIPI2, true);
            MIJ.run('Bandpass Filter...', 'filter_large=6 filter_small=2 suppress=None tolerance=5');
            MIJ.run('Find Maxima...', 'noise=22 output=Count exclude');
            results((4*(j-1))+2,i,k) = MIJ.getResultsTable;
            display({'WIPI2' i})
            MIJ.closeAllWindows
        end
        
%         for i = 1:Num_fields
%             WIPI2 = mijread();
%             MIJ.createImage('WIPI2', WIPI2, true);
%             MIJ.run('8-bit');
%             MIJ.run('Subtract Background...', 'rolling=100');
%             MIJ.run('Threshold...');
%             MIJ.setThreshold(0, 60);
%             MIJ.selectWindow('Threshold');
%             MIJ.run('Close');
%             MIJ.selectWindow('WIPI2');
%             MIJ.run('Convert to Mask');
%             MIJ.run('Convert to Mask');
%             MIJ.run('Fill Holes');
%             MIJ.run('Analyze Particles...', 'size=2-20 circularity=0.10-1.00 show=Outlines display exclude clear summarize');
%             results((4*(j-1))+2,i,k) = length(MIJ.getResultsTable);
%             MIJ.closeAllWindows
%         end
        
        % Iterate through LC3B images
        
        for i = 1:Num_fields
            LC3B = mijread();
            MIJ.createImage('LC3B', LC3B, true);
            MIJ.run('Bandpass Filter...', 'filter_large=6 filter_small=2 suppress=None tolerance=5');
            MIJ.run('Find Maxima...', 'noise=9.5 output=Count exclude');
            results((4*(j-1))+3,i,k) = MIJ.getResultsTable;
            display({'LC3B' i})
            MIJ.closeAllWindows
        end
        
%         for i = 1:Num_fields
%             LC3B = mijread();
%             MIJ.createImage('LC3B', LC3B, true);
%             MIJ.run('8-bit');
%             MIJ.run('Subtract Background...', 'rolling=100');
%             MIJ.run('Threshold...');
%             MIJ.setThreshold(0, 60);
%             MIJ.selectWindow('Threshold');
%             MIJ.run('Close');
%             MIJ.selectWindow('LC3B');
%             MIJ.run('Convert to Mask');
%             MIJ.run('Convert to Mask');
%             MIJ.run('Fill Holes');
%             MIJ.run('Analyze Particles...', 'size=2-20 circularity=0.10-1.00 show=Outlines display exclude clear summarize');
%             results((4*(j-1))+3,i,k) = length(MIJ.getResultsTable);
%             MIJ.closeAllWindows
%         end
        
        % Blank row
        
        for i = 1:Num_fields
            results((4*(j-1))+4,i,k) = 0;
        end
        
        % Continuity check for new treatments
        
        prompt1 = 'Start counting another TREATMENT? Y/N [Default: Y]: ';
        str1 = input(prompt1,'s');
        if str1 == 'N' | str1 == 'n';
            display('Row 1: Number of Cells')
            display('Row 2: Number of WIPI2 Puncta')
            display('Row 3: Number of LC3B Puncta')
            display('Every 4th Row: (Blank)')
            display('Row 5+: NOT USED')
            display('Columns = repeat fields / 3rd dimension = NOT USED')
            size(results)
            display(results)
            return
        end
        
    end
    
    % Continuity check for new cell lines
    
    prompt2 = 'Start counting another CELL LINE? Y/N [Default: Y]: ';
    str2 = input(prompt2,'s');
    if str2 == 'N' | str2 == 'n';
        display('Row 1: Number of Cells')
        display('Row 2: Number of WIPI2 Puncta')
        display('Row 3: Number of LC3B Puncta')
        display('Every 4th Row: (Blank)')
        display('Row 5+: Next Treatment...')
        display('Columns = repeat fields / 3rd dimension = NOT USED')
        size(results)
        display(results)
        return
    end
    
end

% Display final and complete results

display('Row 1: Number of Cells')
display('Row 2: Number of WIPI2 Puncta')
display('Row 3: Number of LC3B Puncta')
display('Every 4th Row: (Blank)')
display('Row 5+: Next Treatment...')
display('Columns = repeat fields / 3rd dimension = different cell lines')
size(results)
display(results)
